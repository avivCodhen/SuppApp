Server:
1. Apply MultiProcessing.
2. Apply JSON.
3. Apply Encryption.
4. Add sites.
5. Multi client communication.
6. Part the program to a few files for comfort

Data struct:
ctg = STRING_FROM_CLIENT

#dict of the ctg and the sites related, the order of the sites is impotant
#if a category does not exit in a certain site, there will be |None| in the sites location.
sites = dict( ctg = ('tevabari/../../ctg?searchquery','aminoshop/../../ctg?searchquery', ...),
              ctg2 = ('tevabari/../../ctg2?searchquery','aminoshop/../../ctg2?searchquery', ...),
              )
sites[ctg] = ['tevabari/../../ctg?searchquery',
              'aminoshop/../../ctg?searchquery',
              ..
              ]
              
funcs = [tevabari_parser,
         aminoshop_parser,
         ..
         ]
for x in range(sites[ctg]):
  res += funcs[x](sites[ctg][x])

return Json.dumps(res)
          # Need to create a dict of the catagories and the sites
Notes: 
#https://www.tevacastel.co.il/search.aspx?src={}

Client:
1.Build an user-login interface
2.Create the graphic layout for the application
3.create the tabs necessary for the search query string
4.Send search query request to the server
5.Recieve JSON data and apply to the application graphics.




Idea level:
Planinng the sites to go over.
Managing the search quest and the types.
Applting encryption.
Connecting client & server.
User credentials.


